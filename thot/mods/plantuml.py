# plantuml -- Thot PlantUML adaptation
# Copyright (C) 2015  <hugues.casse@laposte.net>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""Module enabling the inclusion of diagrams generated by PlantUML.
(http://plantuml.com/).

This module uses either CLASSPATH to find PlantUML, the document variable
PLANTUML_JAR, or the environment variable PLANTUML_JAR  to retrieve
the .jar of PlantUML.
"""

import glob
import os
import shutil

import thot.common as common
import thot.extern as extern

class PlantUMLBlock(extern.ExternalBlock):
	
	def __init__(self, meta):
		extern.ExternalBlock.__init__(self, meta)

	def prepare_input(self, gen, opts, input):
		tmp = self.dump_temporary("@startuml\n%s\n@enduml\n" % self.toText())
		if gen.getType() == "latex":
			opts.append("-tpdf")
			self.out_path = tmp[:-4] + ".pdf"
		else:
			opts.append("-tpng")
			self.out_path = tmp[:-4] + ".png"
		opts.append(tmp);

	def finalize_output(self, gen):
		try:
			shutil.move(self.out_path, self.get_path(gen))
		except IOError as e:
			gen.warn("plantuml error: %s. Cannot generate plantuml diagram.", e)

my_cmds = ["java net.sourceforge.plantuml.Run"]
#jar = man.get_var("PLANTUML_JAR")
#if jar:
#my_cmds = my_cmds + ["java -jar %s" % jar]		
try:
	jar = os.environ["PLANTUML_JAR"]
except KeyError:
	jar = None
if jar:
	my_cmds = my_cmds + ["java -jar %s" % jar]		

__short__ = """integration of AAFig figures"""
__description__ = \
"""This modules makes easier the integration of figures described in
ASCII text and converted to images by AAfig. The complete documentation
of AAFig can be found here: https://launchpad.net/aafigure."""

__syntaxes__ = [
	extern.ExternalModule(
		name = "plantuml",
		ext=".png",
		cmds=my_cmds,
		maker = PlantUMLBlock, 
		options=[
		]
	)
]
